// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaGerenciadorDeTransportes.Data;

#nullable disable

namespace SistemaGerenciadorDeTransportes.Migrations
{
    [DbContext(typeof(SistemaTransporteContexto))]
    [Migration("20231205181340_Migracao3")]
    partial class Migracao3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PassageiroViagem", b =>
                {
                    b.Property<int>("PassageirosUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("ViagensViagemId")
                        .HasColumnType("int");

                    b.HasKey("PassageirosUsuarioId", "ViagensViagemId");

                    b.HasIndex("ViagensViagemId");

                    b.ToTable("tb_passageiro_viagem", (string)null);
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Cidade", b =>
                {
                    b.Property<int>("CidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CidadeId");

                    b.HasIndex("EstadoId");

                    b.ToTable("tb_cidade");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("EstadoId");

                    b.HasIndex("PaisId");

                    b.ToTable("tb_estado");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Modalidade", b =>
                {
                    b.Property<int>("ModalidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("ModalidadeId");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("tb_modalidade");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Pais", b =>
                {
                    b.Property<int>("PaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("PaisId");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("tb_pais");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UsuarioId");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("tb_usuario");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Veiculo", b =>
                {
                    b.Property<int>("VeiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Identificacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ModalidadeId")
                        .HasColumnType("int");

                    b.HasKey("VeiculoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ModalidadeId");

                    b.ToTable("tb_veiculo");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Viagem", b =>
                {
                    b.Property<int>("ViagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CidadeChegadaId")
                        .HasColumnType("int");

                    b.Property<int>("CidadePartidaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("ViagemId");

                    b.HasIndex("CidadeChegadaId");

                    b.HasIndex("CidadePartidaId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("tb_viagem");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Empresa", b =>
                {
                    b.HasBaseType("SistemaGerenciadorDeTransportes.Model.Usuario");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("tb_empresa");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Passageiro", b =>
                {
                    b.HasBaseType("SistemaGerenciadorDeTransportes.Model.Usuario");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("tb_passageiro");
                });

            modelBuilder.Entity("PassageiroViagem", b =>
                {
                    b.HasOne("SistemaGerenciadorDeTransportes.Model.Passageiro", null)
                        .WithMany()
                        .HasForeignKey("PassageirosUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGerenciadorDeTransportes.Model.Viagem", null)
                        .WithMany()
                        .HasForeignKey("ViagensViagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Cidade", b =>
                {
                    b.HasOne("SistemaGerenciadorDeTransportes.Model.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Estado", b =>
                {
                    b.HasOne("SistemaGerenciadorDeTransportes.Model.Pais", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Veiculo", b =>
                {
                    b.HasOne("SistemaGerenciadorDeTransportes.Model.Empresa", "Empresa")
                        .WithMany("Veiculos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGerenciadorDeTransportes.Model.Modalidade", "Modalidade")
                        .WithMany("Veiculos")
                        .HasForeignKey("ModalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Modalidade");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Viagem", b =>
                {
                    b.HasOne("SistemaGerenciadorDeTransportes.Model.Cidade", "CidadeChegada")
                        .WithMany()
                        .HasForeignKey("CidadeChegadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGerenciadorDeTransportes.Model.Cidade", "CidadePartida")
                        .WithMany()
                        .HasForeignKey("CidadePartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaGerenciadorDeTransportes.Model.Veiculo", "Veiculo")
                        .WithMany("Viagens")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CidadeChegada");

                    b.Navigation("CidadePartida");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Empresa", b =>
                {
                    b.HasOne("SistemaGerenciadorDeTransportes.Model.Usuario", null)
                        .WithOne()
                        .HasForeignKey("SistemaGerenciadorDeTransportes.Model.Empresa", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Passageiro", b =>
                {
                    b.HasOne("SistemaGerenciadorDeTransportes.Model.Usuario", null)
                        .WithOne()
                        .HasForeignKey("SistemaGerenciadorDeTransportes.Model.Passageiro", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Estado", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Modalidade", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Pais", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Veiculo", b =>
                {
                    b.Navigation("Viagens");
                });

            modelBuilder.Entity("SistemaGerenciadorDeTransportes.Model.Empresa", b =>
                {
                    b.Navigation("Veiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
